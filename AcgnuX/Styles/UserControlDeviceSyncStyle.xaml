<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:lc="clr-namespace:AcgnuX.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:dv="clr-namespace:AcgnuX.Source.ViewModel.Design">
    
    <!--文件项-->
    <sys:Double x:Key="ItemMaxWidth">105.2</sys:Double>
    <sys:Double x:Key="ItemLabelHeight">20</sys:Double>

    <!--最外层容器border-->
    <Style TargetType="Border" x:Key="ContainerBorderStyle">
        <Setter Property="Width" Value="{StaticResource ItemMaxWidth}"/>
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger x:Name="Bd" Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonHoverColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ItemContainerControlTemplate" TargetType="ListBoxItem">
        <Border x:Name="Bd" Style="{StaticResource ContainerBorderStyle}" Focusable="True">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ItemLeftClickCommand}"/>
                <MouseBinding MouseAction="RightClick" Command="{Binding ItemRightClickCommand}"/>
                <KeyBinding Key="Delete" Command="{Binding ItemDeleteKeyCommand}"/>
            </Border.InputBindings>
            <StackPanel Orientation="Vertical">
                <lc:AsyncImage Stretch="UniformToFill">
                    <lc:AsyncImage.Style>
                        <Style TargetType="{x:Type lc:AsyncImage}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PreviewImgType}" Value="0">
                                    <Setter Property="ImageBytes" Value="{Binding PreviewImg, IsAsync=True}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PreviewImgType}" Value="1">
                                    <Setter Property="Source" Value="../Assets/Images/icon_image_file.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PreviewImgType}" Value="2">
                                    <Setter Property="Source" Value="../Assets/Images/icon_video_file.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PreviewImgType}" Value="3">
                                    <Setter Property="Source" Value="../Assets/Images/icon_audio_file.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding PreviewImgType}" Value="20">
                                    <Setter Property="Source" Value="../Assets/Images/icon_unknow_file.png" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsInDesignMode}" Value="True">
                                    <Setter Property="Source" Value="../Assets/Images/icon_unknow_file.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </lc:AsyncImage.Style>
                </lc:AsyncImage>
                <TextBlock Text="{Binding Name}" ToolTip="按Delete可删除, 鼠标右键可从同步列表中移除" MinHeight="{StaticResource ItemLabelHeight}" TextWrapping="WrapWithOverflow" Margin="0 5 0 0" TextTrimming="CharacterEllipsis"/>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource WhiteBgHoverColorBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <!--鼠标移除非选中的ListViewItem播放背景色动画-->
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.4" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background.Color" From="{StaticResource DataGridItemSelectedBackgroundColor}" To="Transparent" >
                                <ColorAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseOut"/>
                                </ColorAnimation.EasingFunction>
                            </ColorAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource DataGridItemSelectedBackgroundColorBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{StaticResource DataGridItemSelectedBackgroundColorBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--比较器控件-->
    <Style TargetType="TextBlock" x:Key="FolderNameTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5 0 0 2" />
        <Setter Property="FontSize" Value="15" />
    </Style>
    <Style TargetType="StackPanel" x:Key="FolderNameStackPanelStyle">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Background" Value="{StaticResource DataGridHeaderBackgroundColorBrush}" />
    </Style>
    <Style TargetType="Border" x:Key="PlatformIconBorderStyle">
        <Setter Property="CornerRadius" Value="50" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5 0 0 1" />
    </Style>
    <!--同步按钮样式-->
    <Style TargetType="Button" x:Key="SyncButtonStyle" BasedOn="{StaticResource AddButtonStyle}">
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Margin" Value="0 0 5 1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsBusy}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>