<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:AcgnuX">
    <!--Window基本样式-->
    <Style x:Key="WindowBaseStyle" TargetType="Window">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="#FF333333" />
        <!--不允许透明-->
        <Setter Property="AllowsTransparency" Value="True" />
        <!--单边框样式-->
        <Setter Property="WindowStyle" Value="None" />
        <!--边框样式-->
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome ResizeBorderThickness="5" 
                      CaptionHeight="38"
                      CornerRadius="0"
                      GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TransformGroup>
                    <ScaleTransform/>
                    <RotateTransform/>
                </TransformGroup>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
    </Style>



    <!--对话框window基本样式-->
    <Style x:Key="DialogWindowBaseStyle" TargetType="Window" BasedOn="{StaticResource WindowBaseStyle}">
        <Setter Property="ResizeMode" Value="{Binding DialogResizeMode, FallbackValue=NoResize}" />
        <Setter Property="ShowInTaskbar" Value="{Binding ShowInTaskBar, FallbackValue=False}" />
        <!--内容模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="10">
                        <Grid Background="{x:Static Brushes.GhostWhite}" SnapsToDevicePixels="True">
                            <Border 
                                Background="{Binding DialogWindowBackgroundBrush, FallbackValue={x:Static Brushes.GhostWhite}}" 
                                SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10"/>
                                </Border.Effect>
                            </Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!--定义标题栏高度-->
                                    <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=30}" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--标题栏背景色-->
                                <Grid Grid.Column="0" Panel.ZIndex="1" Background="{StaticResource DataGridHeaderBackgroundColorBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!--图标, 标题容器-->
                                    <Canvas Grid.Column="0" Grid.Row="0" ClipToBounds="True">
                                        <!--图标样式-->
                                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}" Height="21" Width="21" Canvas.Left="8" Canvas.Top="8" />
                                        <!--标题文字-->
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" FontSize="14" Canvas.Left="40" Canvas.Top="10"/>
                                    </Canvas>
                                    <Canvas Grid.Column="1" Width="120" ClipToBounds="True">
                                        <Button WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Command="{Binding MinimizeCommand}" 
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                                Content="_" 
                                                Padding="15,0" 
                                                Style="{StaticResource NoneStyleButtonStyle}" 
                                                Template="{StaticResource CommonNoStyleButtonTemplate}"
                                                Visibility="{Binding CanMinimize, FallbackValue=True}"
                                                Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Canvas}}"
                                                Canvas.Right="80" />
                                        <Button WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Command="{Binding MaximizeCommand}" 
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                                Content="☐" 
                                                Padding="15,0" 
                                                Style="{StaticResource NoneStyleButtonStyle}" 
                                                Template="{StaticResource CommonNoStyleButtonTemplate}"
                                                Visibility="{Binding CanMaxmize, FallbackValue=False}"
                                                Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Canvas}}"
                                                Canvas.Right="40"/>
                                        <!--对话框关闭按钮-->
                                        <Button WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Name="CloseDialogButton"
                                                Command="{Binding CloseCommand}" 
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" 
                                                Content="✕" 
                                                Padding="15,0"
                                                Style="{StaticResource NoneStyleButtonStyle}" 
                                                Template="{StaticResource WindowCloseButtonTemplate}" 
                                                Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=Canvas}}"
                                                Canvas.Right="0"/>
                                    </Canvas>
                                </Grid>
                                <!--主内容-->
                                <Border Grid.Row="1" Padding="5" SnapsToDevicePixels="True" Background="{StaticResource DataGridItemBackgroundColorBrush}">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<EventTrigger SourceName="CloseDialogButton" RoutedEvent="Button.Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource WindowFadeOutStoryboard}" />
                            </EventTrigger.Actions>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{StaticResource WindowFadeInStoryboard}" />
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--主窗口样式-->
    <Style TargetType="local:MainWindow" x:Key="MainWindowStyle" BasedOn="{StaticResource WindowBaseStyle}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <!--内容模板-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Padding="10">
                        <!--<Grid Background="{StaticResource MainWindowBackgroundColorBrush}">-->
                        <Grid Background="{x:Static Brushes.GhostWhite}">
                            <!--<Border x:Name="Container" Background="{x:Null}"/>-->
                            <Border Background="{Binding MainWindowBackgroundBrush, FallbackValue={x:Static Brushes.GhostWhite}}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" Opacity="0.8" BlurRadius="10"/>
                                </Border.Effect>
                            </Border>
                            <Grid>
                                <!--<Grid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=Container}" />
                            </Grid.OpacityMask>-->
                                <Grid.RowDefinitions>
                                    <!--定义标题栏高度-->
                                    <RowDefinition Height="{Binding TitleHeightGridLength, FallbackValue=38}" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--标题栏背景色-->
                                <Grid Grid.Column="0" Panel.ZIndex="1" Background="{StaticResource MainWindowTitleBarColorBrush}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!--图标, 标题容器-->
                                    <Border Grid.Column="0">
                                        <StackPanel Orientation="Horizontal">
                                            <!--图标样式-->
                                            <Border Padding="8 0" Background="{StaticResource DataGridHeaderBackgroundColorBrush}">
                                                <Image Source="..\Assets\Ico\favicon.ico" Width="21" Height="21" Cursor="Hand" WindowChrome.IsHitTestVisibleInChrome="True">
                                                    <Image.InputBindings>
                                                        <MouseBinding MouseAction="LeftClick" Command="{Binding FaviconClickCommand}" />
                                                    </Image.InputBindings>
                                                </Image>
                                            </Border>
                                            <!--主菜单-->
                                            <ListBox x:Name="NavMenuListBox"
                                                     WindowChrome.IsHitTestVisibleInChrome="True"
                                                     ItemsSource="{Binding navMenus}"
                                                     SelectedItem="{Binding SelectedNavItem}"
                                                     ItemContainerStyle="{StaticResource NavMenuListBoxItemStyle}" 
                                                     Style="{StaticResource NavMenuListBoxStyle}" 
                                                     Template="{StaticResource NavMenuListBoxControlTemplate}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                                        <i:InvokeCommandAction Command="{Binding OnNavMenuItemClickCommand}" CommandParameter="{Binding SelectedItem, ElementName=NavMenuListBox}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ListBox>
                                        </StackPanel>
                                    </Border>

                                    <!--主窗口操作按钮-->
                                    <Border Grid.Column="1" Background="{StaticResource DataGridHeaderBackgroundColorBrush}">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding OnRefreshBackgroundCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource NavBarButtonStyle}" >
                                                <Path Data="{StaticResource Icon_Cloth}" Style="{StaticResource NavBarFunctionIcoPathStyle}"/>
                                            </Button>
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding OnSettingCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Style="{StaticResource NavBarButtonStyle}" >
                                                <Path Data="{StaticResource Icon_Setting}" Style="{StaticResource NavBarFunctionIcoPathStyle}"/>
                                            </Button>
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MinimizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Content="_" Style="{StaticResource NavBarButtonStyle}" />
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding MaximizeCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Content="☐" Style="{StaticResource NavBarButtonStyle}" />
                                            <Button WindowChrome.IsHitTestVisibleInChrome="True" Command="{Binding CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Content="✕" Style="{StaticResource NavBarButtonStyle}" Template="{StaticResource WindowCloseButtonTemplate}"/>
                                        </StackPanel>
                                    </Border>
                                </Grid>

                                <!--主内容-->
                                <Border Grid.Row="1">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource WindowFadeInStoryboard}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>