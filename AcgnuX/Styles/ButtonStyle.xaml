<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--窗口关闭按钮模板-->
    <ControlTemplate x:Key="WindowCloseButtonTemplate" TargetType="Button">
        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="true" Cursor="Hand">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Red"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--普通无边框按钮模板-->
    <ControlTemplate x:Key="CommonNoStyleButtonTemplate" TargetType="Button">
        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="true" Cursor="Hand">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource WhiteBgHoverColorBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#BB7C7C7C"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF747474"/>
    <!--不带样式的Button-->
    <Style x:Key="NoneStyleButtonStyle" TargetType="{x:Type Button}">
        <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/> -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Cursor="Hand" CornerRadius="2" >
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--主窗口标题栏Button-->
    <Style x:Key="NavBarButtonStyle" TargetType="Button" BasedOn="{StaticResource NoneStyleButtonStyle}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Template" Value="{StaticResource CommonNoStyleButtonTemplate}" />
    </Style>
    
    <!-- 无边框带背景色button基本样式 -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource NoneStyleButtonStyle}">
        <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/> -->
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="2" Cursor="Hand">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonMainColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 无背景色带边框基本样式 -->
    <Style x:Key="BorderOnlyButton" TargetType="{x:Type Button}">
        <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/> -->
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="2" Cursor="Hand">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- <Trigger Property="IsDefaulted" Value="true"> -->
                        <!--     <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/> -->
                        <!-- </Trigger> -->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource WhiteBgHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonMainColorBrush}"/>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Button.IsPressed" Value="true">
                    <Setter Property="Background" Value="{StaticResource ButtonMainColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--主按钮-->
    <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}" x:Key="MainButtonStyle">
        <Setter Property="Background" Value="{DynamicResource ButtonMainColorBrush}" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    
    <!--次要按钮-->
    <Style TargetType="Button" BasedOn="{StaticResource BorderOnlyButton}" x:Key="SecondaryButtonStyle">
        <Setter Property="Background" Value="{DynamicResource ButtonSecondaryColorBrush}" />
    </Style>
    
    <!--悬浮按钮主-->
    <Style TargetType="Button" BasedOn="{StaticResource MainButtonStyle}" x:Key="MainFloatButtonStyle">
        <Setter Property="OpacityMask">
            <Setter.Value>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing Brush="White">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <EllipseGeometry RadiusX="1" RadiusY="1" Center="1,1" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!--表单确定主按钮-->
    <Style TargetType="Button" x:Key="FormConfirmButtonStyle" BasedOn="{StaticResource MainButtonStyle}">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <!--标准新增按钮-->
    <Style TargetType="Button" x:Key="AddButtonStyle" BasedOn="{StaticResource MainButtonStyle}">
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="5 0 0 0" />
    </Style>

    <!--标准刷新-->
    <Style TargetType="Button" x:Key="RefreshFloatButtonStyle" BasedOn="{StaticResource MainFloatButtonStyle}">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Margin" Value="0 0 5 5" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <!--按钮样式 乐谱下载记录界面用到 -->
    <Style TargetType="Button" x:Key="AddFloatButtonTriggerStyle" BasedOn="{StaticResource RefreshFloatButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ButtonStep}" Value="1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="ContinueFloatButtonTriggerStyle" BasedOn="{StaticResource RefreshFloatButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ButtonStep}" Value="2">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="StopFloatButtonTriggerStyle" BasedOn="{StaticResource RefreshFloatButtonStyle}">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Background" Value="OrangeRed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ButtonStep}" Value="3">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>