<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Class="AcgnuX.Resource.Styles.ListViewStyle"
                    x:ClassModifier="public">

    <!--ListBox基础-->
    <Style TargetType="{x:Type ListView}" x:Key="ListViewBaseStyle">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style TargetType="{x:Type ListView}" x:Key="DeviceSyncInnerListView" BasedOn="{StaticResource ListViewBaseStyle}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <!--移动端设备同步交互容器模板-->
    <ControlTemplate TargetType="{x:Type ListBox}" x:Key="DeviceSyncListViewTemplate">
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="0 5 0 0" Template="{DynamicResource BaseScrollViewerControlTemplate}" CanContentScroll="False">
            <ItemsPresenter >
            </ItemsPresenter>
        </ScrollViewer>
    </ControlTemplate>

    <!--图片同步列表交互模板-->
    <Style TargetType="{x:Type ListViewItem}" x:Key="DeviceSyncListViewItemControlStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Padding" Value="0 0 0 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="1">
                        <!--<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                        <StackPanel Orientation="Vertical"  Height="120" Width="100" MouseRightButtonDown="ImgItemRightClick">
                            <Grid>
                                <Image Source="{Binding BitImg}" Panel.ZIndex="0"/>
                                <Path Width="20" Height="20" Margin="80 70 0 0" Data="{DynamicResource Icon_Play}" Style="{StaticResource MainStatusBarIcoPathStyle}"/>
                            </Grid>
                            <Label Content="{Binding ImgNameView}" Height="20" Width="100" Margin="0 2 0 0" Padding="0"></Label>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource WhiteBgHoverColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <!--鼠标移除非选中的ListViewItem播放背景色动画-->
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.4" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background.Color" From="{StaticResource DataGridItemSelectedBackgroundColor}" To="Transparent" >
                                            <ColorAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DataGridItemSelectedBackgroundColorBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource DataGridItemSelectedBackgroundColorBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--移动端设备同步交互模板-->
    <Style TargetType="{x:Type ListViewItem}" x:Key="DeviceSyncListViewItemContainerStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0 3 0 3"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="#FFd9d9d9"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius="2">
                        <StackPanel Orientation="Vertical">
                            <WrapPanel Orientation="Horizontal" DockPanel.Dock="Left">
                                <Label Content="{Binding FolderNameView}" Margin="10 5 0 2" FontSize="14" FontWeight="Bold" Foreground="#FF252525"/>
                                <Button Style="{StaticResource AddButtonStyle}">
                                    <WrapPanel>
                                        <Path Style="{StaticResource CommonAddButtonPathIcoStyle}"/>
                                        <TextBlock Text="{StaticResource Add}" Margin="5 0 0 0" />
                                    </WrapPanel>
                                </Button>
                            </WrapPanel>
                            <ListView Style="{DynamicResource DeviceSyncInnerListView}" ItemsSource="{Binding ImgItemList}" PreviewMouseWheel="PreviewMouseWheel" ItemContainerStyle="{StaticResource DeviceSyncListViewItemControlStyle}">
                                <!--.<ListViewGroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.Panel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </GroupStyle.Panel>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="{x:Type GroupItem}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="GroupItem">
                                                            <StackPanel Orientation="Horizontal">
                                                                <ContentPresenter/>
                                                                <ItemsPresenter/>
                                                            </StackPanel>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListView.GroupStyle>-->
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal"></WrapPanel>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                            </ListView>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>